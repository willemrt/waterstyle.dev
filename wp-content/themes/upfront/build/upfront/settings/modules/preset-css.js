define(["scripts/upfront/settings/modules/base-module","scripts/upfront/preset-settings/preset-css-editor"],function(e,t){var n=Upfront.Settings.l10n.preset_manager,r=e.extend({className:"upfront-settings-css",events:{"click input[name=preset_css]":"openEditor"},initialize:function(t){var r=this;e.prototype.initialize.call(this,t),this.fields=_([new Upfront.Views.Editor.Field.Button({model:r.model,className:"edit_preset_label",compact:!0,label:n.edit_preset_label}),new Upfront.Views.Editor.Field.Button({model:r.model,className:"edit_preset_css",compact:!0,name:"preset_css",label:n.edit_preset_css})])},onPresetUpdate:function(e){this.trigger("upfront:presets:update",e)},updateCss:function(e,t,n){t.replace(/'/g,'"'),e.set({preset_style:t})},openEditor:function(e){var n=this;e.preventDefault(),Upfront.Events.trigger("entity:settings:beforedeactivate");var r=Upfront.Application.cssEditor.getElementType(this.model),i=r.label.toLowerCase()+"-preset-"+this.options.preset.get("id");this.presetCSSEditor=new t({model:this.model,preset:this.options.preset,stylename:i});var s=_.debounce(this.updateCss,1e3);this.listenTo(this.presetCSSEditor,"upfront:presets:update",this.onPresetUpdate),this.listenTo(this.presetCSSEditor,"change",function(e){s(n.options.preset,e,n)}),Upfront.Events.trigger("entity:settings:deactivate")}});return r});